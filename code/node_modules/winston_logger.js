const winston = require('winston')
const {isProduction, logLevel} = require('env_vars')

// Investigate this: winston.cli();

const LOG_FORMAT = winston.format.printf(function(info) {
    let date = new Date().toISOString()
    let message = JSON.stringify(info.message, null, 4)
    return `${date}-${info.level}: ${message}\n`;
});

const TIMESTAMP_FORMAT = 'YYYY-MM-DD HH:mm:ss'

module.exports = class LoggerInstance {
    constructor(namespace=undefined) {
        return winston.createLogger({
            format: winston.format.combine(
                winston.format.timestamp({
                    format: TIMESTAMP_FORMAT,
                }),
                LOG_FORMAT
            ),
            transports: [
                new winston.transports.Console({
                    level: logLevel,
                    format: winston.format.combine(
                        winston.format.timestamp({
                            format: TIMESTAMP_FORMAT,
                        }),
                        winston.format.colorize(),
                        LOG_FORMAT
                    ),
                    // this should work, but waiting to test it until default succeeds
                    // filters: [
                    //     function (level, msg, meta) {
                    //         return `[${namespace}] ${msg}`
                    //     }
                    // ]
                }),
            ],
        })
    }
}